(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{432:function(t,a,s){"use strict";s.r(a);var e=s(18),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"dom-变动观察器-mutation-observer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-变动观察器-mutation-observer"}},[t._v("#")]),t._v(" DOM 变动观察器（Mutation observer）")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s/oWI5M8VbLASPDXY34d6N5A",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://mp.weixin.qq.com/s/oWI5M8VbLASPDXY34d6N5A"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("MutationObserver")]),t._v(" 是一个内建对象，它观察 DOM 元素，并在检测到更改时触发回调。")])]),t._v(" "),s("p",[t._v("我们将首先看一下语法，然后探究一个实际的用例，以了解它在什么地方有用。")]),t._v(" "),s("h2",{attrs:{id:"api语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api语法"}},[t._v("#")]),t._v(" api语法")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("MutationObserver")]),t._v(" 使用简单。")])]),t._v(" "),s("p",[t._v("首先，我们创建一个带有回调函数的观察器：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let observer = new MutationObserver(callback);\n")])])]),s("p",[t._v("然后将其附加到一个 DOM 节点：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("observer.observe(node, config);\n")])])]),s("p",[s("code",[t._v("config")]),t._v(" 是一个具有布尔选项的对象，该布尔选项表示“将对哪些更改做出反应”：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("childList")]),t._v(" —— "),s("code",[t._v("node")]),t._v(" 的直接子节点的更改，")]),t._v(" "),s("li",[s("code",[t._v("subtree")]),t._v(" —— "),s("code",[t._v("node")]),t._v(" 的所有后代的更改，")]),t._v(" "),s("li",[s("code",[t._v("attributes")]),t._v(" —— "),s("code",[t._v("node")]),t._v(" 的特性（attribute），")]),t._v(" "),s("li",[s("code",[t._v("attributeFilter")]),t._v(" —— 特性名称数组，只观察选定的特性。")]),t._v(" "),s("li",[s("code",[t._v("characterData")]),t._v(" —— 是否观察 "),s("code",[t._v("node.data")]),t._v("（文本内容），")])]),t._v(" "),s("p",[t._v("其他几个选项：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("attributeOldValue")]),t._v(" —— 如果为 "),s("code",[t._v("true")]),t._v("，则将特性的旧值和新值都传递给回调（参见下文），否则只传新值（需要 "),s("code",[t._v("attributes")]),t._v(" 选项），")]),t._v(" "),s("li",[s("code",[t._v("characterDataOldValue")]),t._v(" —— 如果为 "),s("code",[t._v("true")]),t._v("，则将 "),s("code",[t._v("node.data")]),t._v(" 的旧值和新值都传递给回调（参见下文），否则只传新值（需要 "),s("code",[t._v("characterData")]),t._v(" 选项）。")])]),t._v(" "),s("p",[t._v("然后，在发生任何更改后，将执行“回调”：更改被作为一个 "),s("strong",[t._v("MutationRecord")]),t._v("[1] 对象列表传入第一个参数，而观察器自身作为第二个参数。")]),t._v(" "),s("p",[s("strong",[t._v("MutationRecord")]),t._v("[2] 对象具有以下属性：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("type")]),t._v(" —— 变动类型，以下类型之一：")])]),t._v(" "),s("li",[s("ul",[s("li",[s("code",[t._v('"attributes"')]),t._v("：特性被修改了，")]),t._v(" "),s("li",[s("code",[t._v('"characterData"')]),t._v("：数据被修改了，用于文本节点，")]),t._v(" "),s("li",[s("code",[t._v('"childList"')]),t._v("：添加/删除了子元素。")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("target")]),t._v(" —— 更改发生在何处："),s("code",[t._v('"attributes"')]),t._v(" 所在的元素，或 "),s("code",[t._v('"characterData"')]),t._v(" 所在的文本节点，或 "),s("code",[t._v('"childList"')]),t._v(" 变动所在的元素，")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("addedNodes/removedNodes")]),t._v(" —— 添加/删除的节点，")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("previousSibling/nextSibling")]),t._v(" —— 添加/删除的节点的上一个/下一个兄弟节点，")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("attributeName/attributeNamespace")]),t._v(" —— 被更改的特性的名称/命名空间（用于 XML），")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("oldValue")]),t._v(" —— 之前的值，仅适用于特性或文本更改，如果设置了相应选项 "),s("code",[t._v("attributeOldValue")]),t._v("/"),s("code",[t._v("characterDataOldValue")]),t._v("。")])])]),t._v(" "),s("p",[t._v("例如，这里有一个 "),s("code",[t._v("<div>")]),t._v("，它具有 "),s("code",[t._v("contentEditable")]),t._v(" 特性。该特性使我们可以聚焦和编辑元素。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div contentEditable id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"elem"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Click and "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("edit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" please"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" observer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationObserver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("mutationRecords")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mutationRecords"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(the changes)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 观察除了特性之外的所有变动")]),t._v("\nobserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("childList")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 观察直接子节点")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("subtree")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 及其更低的后代节点")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("characterDataOldValue")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将旧的数据传递给回调")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("如果我们在浏览器中运行上面这段代码，并聚焦到给定的 "),s("code",[t._v("<div>")]),t._v(" 上，然后更改 "),s("code",[t._v("<b>edit</b>")]),t._v("中的文本，"),s("code",[t._v("console.log")]),t._v(" 将显示一个变动：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('mutationRecords = [{\n  type: "characterData",\n  oldValue: "edit",\n  target: <text node>,\n  // 其他属性为空\n}];\n')])])]),s("p",[t._v("如果我们进行更复杂的编辑操作，例如删除 "),s("code",[t._v("<b>edit</b>")]),t._v("，那么变动事件可能会包含多个变动记录：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("mutationRecords "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"childList"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div#elem"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("removedNodes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("nextSibling")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("previousSibling")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其他属性为空")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"characterData"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...变动的详细信息取决于浏览器如何处理此类删除")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 它可能是将两个相邻的文本节点 "edit " 和 ", please" 合并成一个节点，')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者可能将它们留在单独的文本节点中")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("因此，"),s("code",[t._v("MutationObserver")]),t._v(" 允许对 DOM 子树中的任何更改作出反应。")]),t._v(" "),s("h2",{attrs:{id:"用于集成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用于集成"}},[t._v("#")]),t._v(" 用于集成")]),t._v(" "),s("p",[t._v("在什么时候可能有用？")]),t._v(" "),s("p",[t._v("想象一下，你需要添加一个第三方脚本，该脚本不仅包含有用的功能，还会执行一些我们不想要的操作，例如显示广告 "),s("code",[t._v('<div class="ads">Unwanted ads</div>')]),t._v("。")]),t._v(" "),s("p",[t._v("当然，第三方脚本没有提供删除它的机制。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("MutationObserver")]),t._v("，我们可以监测到我们不需要的元素何时出现在我们的 DOM 中，并将其删除。")]),t._v(" "),s("p",[t._v("还有一些其他情况，例如第三方脚本会将某些内容添加到我们的文档中，并且我们希望检测出这种情况何时发生，以调整页面，动态调整某些内容的大小等。")]),t._v(" "),s("p",[s("code",[t._v("MutationObserver")]),t._v(" 使我们能够实现这种需求。")]),t._v(" "),s("h2",{attrs:{id:"用于架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用于架构"}},[t._v("#")]),t._v(" 用于架构")]),t._v(" "),s("p",[t._v("从架构的角度来看，在某些情况下，"),s("code",[t._v("MutationObserver")]),t._v(" 有不错的作用。")]),t._v(" "),s("p",[t._v("假设我们正在建立一个有关编程的网站。自然地，文章和其他材料中可能包含源代码段。")]),t._v(" "),s("p",[t._v("在 HTML 标记（markup）中的此类片段如下所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('...\n<pre class="language-javascript"><code>\n  // 这里是代码\n  let hello = "world";\n</code></pre>\n...\n')])])]),s("p",[t._v("为了提高可读性，同时对其进行美化，我们将在我们的网站上使用 JavaScript 语法高亮显示库，例如 "),s("strong",[t._v("Prism.js")]),t._v("[3]。为了使用 Prism 对以上代码片段进行语法高亮显示，我们调用了 "),s("code",[t._v("Prism.highlightElem(pre)")]),t._v("，它会检查此类 "),s("code",[t._v("pre")]),t._v(" 元素的内容，并为这些元素添加特殊的标签（tag）和样式，以进行彩色语法高亮显示，类似于你在本文的示例中看到的那样。")]),t._v(" "),s("p",[t._v("那么，我们应该在什么时候执行该高亮显示方法呢？我们可以在 "),s("code",[t._v("DOMContentLoaded")]),t._v(" 事件中执行，或者将脚本放在页面的底部。DOM 就绪后，我们可以搜索元素 "),s("code",[t._v('pre[class*="language"]')]),t._v(" 并对其调用 "),s("code",[t._v("Prism.highlightElem")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 高亮显示页面上的所有代码段\ndocument.querySelectorAll('pre[class*=\"language\"]').forEach(Prism.highlightElem);\n")])])]),s("p",[t._v("到目前为止，一切都很简单，对吧？我们找到 HTML 中的代码片段并高亮显示它们。")]),t._v(" "),s("p",[t._v("现在让我们继续。假设我们要从服务器动态获取资料。我们将 "),s("strong",[t._v("在本教程的后续章节")]),t._v("[4] 中学习进行此操作的方法。目前，只需要关心我们从网络服务器获取 HTML 文章并按需显示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let article = /* 从服务器获取新内容 */\narticleElem.innerHTML = article;\n")])])]),s("p",[t._v("新的 "),s("code",[t._v("article")]),t._v(" HTML 可能包含代码段。我们需要对其调用 "),s("code",[t._v("Prism.highlightElem")]),t._v("，否则它们将不会被高亮显示。")]),t._v(" "),s("p",[s("strong",[t._v("对于动态加载的文章，应该在何处何时调用 "),s("code",[t._v("Prism.highlightElem")]),t._v("？")])]),t._v(" "),s("p",[t._v("我们可以将该调用附加到加载文章的代码中，如下所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let article = /* 从服务器获取新内容 */\narticleElem.innerHTML = article;\n\nlet snippets = articleElem.querySelectorAll('pre[class*=\"language-\"]');\nsnippets.forEach(Prism.highlightElem);\n")])])]),s("p",[t._v("……但是，想象一下，如果代码中有很多地方都是在加载内容：文章，测验和论坛帖子等。我们是否需要在每个地方都附加一个高亮显示调用，以在内容加载完成后，高亮内容中的代码。那很不方便。")]),t._v(" "),s("p",[t._v("并且，如果内容是由第三方模块加载的，该怎么办？例如，我们有一个由其他人编写的论坛，该论坛可以动态加载内容，并且我们想为其添加语法高亮显示。没有人喜欢修补第三方脚本。")]),t._v(" "),s("p",[t._v("幸运的是，还有另一种选择。")]),t._v(" "),s("p",[t._v("我们可以使用 "),s("code",[t._v("MutationObserver")]),t._v(" 来自动检测何时在页面中插入了代码段，并高亮显示它们。")]),t._v(" "),s("p",[t._v("因此，我们在一个地方处理高亮显示功能，从而使我们无需集成它。")]),t._v(" "),s("h3",{attrs:{id:"动态高亮显示示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态高亮显示示例"}},[t._v("#")]),t._v(" 动态高亮显示示例")]),t._v(" "),s("p",[t._v("这是一个工作示例。")]),t._v(" "),s("p",[t._v("如果你运行这段代码，它将开始观察下面的元素，并高亮显示现在此处的所有代码段：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" observer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MutationObserver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("mutations")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" mutation "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" mutations"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查新节点，有什么需要高亮显示的吗？")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" node "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" mutation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addedNodes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们只跟踪元素，跳过其他节点（例如文本节点）")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HTMLElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查插入的元素是否为代码段")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pre[class*=\"language-\"]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Prism"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("highlightElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者可能在子树的某个地方有一个代码段？")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" elem "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelectorAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pre[class*=\"language-\"]'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Prism"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("highlightElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" demoElem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'highlight-demo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nobserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("observe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("demoElem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("childList")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("subtree")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("下面有一个 HTML 元素，以及使用 "),s("code",[t._v("innerHTML")]),t._v(" 动态填充它的 JavaScript。")]),t._v(" "),s("p",[t._v("请先运行前面那段代码（上面那段，观察元素），然后运行下面这段代码。你将看到 "),s("code",[t._v("MutationObserver")]),t._v(" 是如何检测并高亮显示代码段的。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<p id="highlight-demo" style="border: 1px solid #ddd">一个具有 <code>id="highlight-demo"</code> 的示例元素，运行上面那段代码来观察它。</p>\n')])])]),s("p",[t._v("下面这段代码填充了其 "),s("code",[t._v("innerHTML")]),t._v("，这导致 "),s("code",[t._v("MutationObserver")]),t._v(" 作出反应，并突出显示其内容：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" demoElem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'highlight-demo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 动态插入带有代码段的内容")]),t._v("\ndemoElem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('下面是一个代码段：\n  <pre class="language-javascript"><code> let hello = "world!"; </code></pre>\n  <div>另一个代码段：</div>\n  <div>\n    <pre class="language-css"><code>.class { margin: 5px; } </code></pre>\n  </div>\n')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("现在我们有了 "),s("code",[t._v("MutationObserver")]),t._v("，它可以跟踪观察到的元素中的，或者整个 "),s("code",[t._v("document")]),t._v(" 中的所有高亮显示。我们可以在 HTML 中添加/删除代码段，而无需考虑高亮问题。")]),t._v(" "),s("h2",{attrs:{id:"其他方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他方法"}},[t._v("#")]),t._v(" 其他方法")]),t._v(" "),s("p",[t._v("有一个方法可以停止观察节点：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("observer.disconnect()")]),t._v(" —— 停止观察。")])]),t._v(" "),s("p",[t._v("当我们停止观察时，观察器可能尚未处理某些更改。在种情况下，我们使用：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("observer.takeRecords()")]),t._v(" —— 获取尚未处理的变动记录列表，表中记录的是已经发生，但回调暂未处理的变动。")])]),t._v(" "),s("p",[t._v("这些方法可以一起使用，如下所示：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 如果你关心可能未处理的近期的变动\n// 那么，应该在 disconnect 前调用获取未处理的变动列表\nlet mutationRecords = observer.takeRecords();\n\n// 停止跟踪变动\nobserver.disconnect();\n...\n")])])]),s("blockquote",[s("p",[s("strong",[s("code",[t._v("observer.takeRecords()")]),t._v(" 返回的记录被从处理队列中移除：")])]),t._v(" "),s("p",[t._v("回调函数不会被 "),s("code",[t._v("observer.takeRecords()")]),t._v(" 返回的记录调用。")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("垃圾回收：")])]),t._v(" "),s("p",[t._v("观察器在内部对节点使用弱引用。也就是说，如果一个节点被从 DOM 中移除了，并且该节点变得不可访问，那么它就可以被垃圾回收。")]),t._v(" "),s("p",[t._v("观察到 DOM 节点这一事实并不能阻止垃圾回收。")])]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[s("code",[t._v("MutationObserver")]),t._v(" 可以对 DOM 的变化作出反应 —— 特性（attribute），文本内容，添加/删除元素。")]),t._v(" "),s("p",[t._v("我们可以用它来跟踪代码其他部分引入的更改，以及与第三方脚本集成。")]),t._v(" "),s("p",[s("code",[t._v("MutationObserver")]),t._v(" 可以跟踪任何更改。"),s("code",[t._v("config")]),t._v(" “要观察的内容”选项用于优化，避免不必要的回调调用以节省资源。")]),t._v(" "),s("hr"),t._v(" "),s("blockquote",[s("p",[t._v("现代 JavaScript 教程：开源的现代 JavaScript 从入门到进阶的优质教程。"),s("strong",[t._v("React 官方文档推荐，与 MDN 并列的 JavaScript 学习教程")]),t._v("[5]。")]),t._v(" "),s("p",[t._v("在线免费阅读：https://zh.javascript.info")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("p",[t._v("[1]MutationRecord: "),s("em",[t._v("https://dom.spec.whatwg.org/#mutationrecord")])]),t._v(" "),s("p",[t._v("[2]MutationRecord: "),s("em",[t._v("https://dom.spec.whatwg.org/#mutationrecord")])]),t._v(" "),s("p",[t._v("[3]Prism.js: "),s("em",[t._v("https://prismjs.com/")])]),t._v(" "),s("p",[t._v("[4]在本教程的后续章节: "),s("em",[t._v("https://zh.javascript.info/fetch")])]),t._v(" "),s("p",[t._v("[5]React 官方文档推荐，与 MDN 并列的 JavaScript 学习教程: "),s("em",[t._v("https://zh-hans.reactjs.org/docs/getting-started.html#javascript-resources")])])])}),[],!1,null,null,null);a.default=n.exports}}]);