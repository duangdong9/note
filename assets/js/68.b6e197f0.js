(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{483:function(n,e,t){"use strict";t.r(e);var o=t(18),a=Object(o.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"能否模拟实现js的bind方法-高频考点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#能否模拟实现js的bind方法-高频考点"}},[n._v("#")]),n._v(" 能否模拟实现JS的bind方法（高频考点）")]),n._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s/Sas7eltchfa9GaVQIMzSxA",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://mp.weixin.qq.com/s/Sas7eltchfa9GaVQIMzSxA"),t("OutboundLink")],1)])]),n._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[n._v("#")]),n._v(" 前言")]),n._v(" "),t("blockquote",[t("p",[n._v("这是面试官问系列的第二篇，旨在帮助读者提升"),t("code",[n._v("JS")]),n._v("基础知识，包含"),t("code",[n._v("new、call、apply、this、继承")]),n._v("相关知识。\n"),t("code",[n._v("面试官问系列")]),n._v("文章如下：感兴趣的读者可以点击阅读。\n1."),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650747275&idx=1&sn=bb679c3534bad87d5f9650e313fcf43e&chksm=88663207bf11bb11a61ab43b345dafa881d1f5f9aab919b5646764dab6ec597ce44be4b13389&token=769761577&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("面试官问：能否模拟实现JS的new操作符"),t("OutboundLink")],1),n._v("\n2.面试官问：能否模拟实现JS的bind方法（本文）\n3."),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744687&idx=1&sn=ea517155eddbed9511cf6b5e2b9f24ca&chksm=886624e3bf11adf540a6cb1e0f51077b0938757f389e1de666fc953635af167d9de9ea0278ff&token=2051144447&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("面试官问：能否模拟实现JS的call和apply方法"),t("OutboundLink")],1),n._v("\n4."),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744695&idx=1&sn=63c761b9129c3c55ad7a2c21ddb4d82b&chksm=886624fbbf11aded9c57e7846c98961848cee7871f5e10bac3bdb949e9135fbc2095ae677102&token=1471663946&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("面试官问：JS的this指向"),t("OutboundLink")],1),n._v("\n5."),t("a",{attrs:{href:"http://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744527&idx=1&sn=3db8bffc690b1b6abd0c38ccaa0f37d3&chksm=88662543bf11ac554181d36d618bcc5d058e555265a6963bc0e8a02ebe3cceee0ec61cee1383&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("面试官问：JS的继承"),t("OutboundLink")],1)])]),n._v(" "),t("p",[n._v("用过"),t("code",[n._v("React")]),n._v("的同学都知道，经常会使用"),t("code",[n._v("bind")]),n._v("来绑定"),t("code",[n._v("this")]),n._v("。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("import React, { Component } from 'react';\nclass TodoItem extends Component{\n    constructor(props){\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(){\n        console.log('handleClick');\n    }\n    render(){\n        return  (\n            <div onClick={this.handleClick}>点击</div>\n        );\n    };\n}\nexport default TodoItem;\n")])])]),t("p",[t("strong",[n._v("那么面试官可能会问是否想过"),t("code",[n._v("bind")]),n._v("到底做了什么，怎么模拟实现呢。")])]),n._v(" "),t("blockquote",[t("p",[n._v("附上之前写文章写过的一段话：已经有很多模拟实现"),t("code",[n._v("bind")]),n._v("的文章，为什么自己还要写一遍呢。学习就好比是座大山，人们沿着不同的路登山，分享着自己看到的风景。你不一定能看到别人看到的风景，体会到别人的心情。只有自己去登山，才能看到不一样的风景，体会才更加深刻。")])]),n._v(" "),t("p",[n._v("先看一下"),t("code",[n._v("bind")]),n._v("是什么。从上面的"),t("code",[n._v("React")]),n._v("代码中，可以看出"),t("code",[n._v("bind")]),n._v("执行后是函数，并且每个函数都可以执行调用它。眼见为实，耳听为虚。读者可以在控制台一步步点开"),t("strong",[n._v("例子1")]),n._v("中的"),t("code",[n._v("obj")]),n._v(":")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var obj = {};\nconsole.log(obj);\nconsole.log(typeof Function.prototype.bind); // function\nconsole.log(typeof Function.prototype.bind());  // function\nconsole.log(Function.prototype.bind.name);  // bind\nconsole.log(Function.prototype.bind().name);  // bound\n")])])]),t("p",[t("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/Mpt86EGjlpsvT5hPrdvtpxo2ZKOm1kNDLLLkN0Esdw7FD4iaVbtWKjpGnqK9usznCicW7SaLV5nRWWQGgMCENVew/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),t("code",[n._v("Function.prototype.bind")])]),n._v(" "),t("h3",{attrs:{id:"因此可以得出结论1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#因此可以得出结论1"}},[n._v("#")]),n._v(" 因此可以得出结论1：")]),n._v(" "),t("p",[n._v("1、"),t("code",[n._v("bind")]),n._v("是"),t("code",[n._v("Functoin")]),n._v("原型链中"),t("code",[n._v("Function.prototype")]),n._v("的一个属性，每个函数都可以调用它。\n2、"),t("code",[n._v("bind")]),n._v("本身是一个函数名为"),t("code",[n._v("bind")]),n._v("的函数，返回值也是函数，函数名是"),t("code",[n._v("bound")]),n._v("。（打出来就是"),t("code",[n._v("bound加上一个空格")]),n._v("）。知道了"),t("code",[n._v("bind")]),n._v("是函数，就可以传参，而且返回值"),t("code",[n._v("'bound '")]),n._v("也是函数，也可以传参，就很容易写出"),t("strong",[n._v("例子2")]),n._v("：\n后文统一 "),t("code",[n._v("bound")]),n._v(" 指原函数"),t("code",[n._v("original")]),n._v(" "),t("code",[n._v("bind")]),n._v("之后返回的函数，便于说明。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var obj = {\n    name: '若川',\n};\nfunction original(a, b){\n    console.log(this.name);\n    console.log([a, b]);\n    return false;\n}\nvar bound = original.bind(obj, 1);\nvar boundResult = bound(2); // '若川', [1, 2]\nconsole.log(boundResult); // false\nconsole.log(original.bind.name); // 'bind'\nconsole.log(original.bind.length); // 1\nconsole.log(original.bind().length); // 2 返回original函数的形参个数\nconsole.log(bound.name); // 'bound original'\nconsole.log((function(){}).bind().name); // 'bound '\nconsole.log((function(){}).bind().length); // 0\n")])])]),t("h3",{attrs:{id:"由此可以得出结论2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#由此可以得出结论2"}},[n._v("#")]),n._v(" 由此可以得出结论2：")]),n._v(" "),t("p",[n._v("1、调用"),t("code",[n._v("bind")]),n._v("的函数中的"),t("code",[n._v("this")]),n._v("指向"),t("code",[n._v("bind()")]),n._v("函数的第一个参数。")]),n._v(" "),t("p",[n._v("2、传给"),t("code",[n._v("bind()")]),n._v("的其他参数接收处理了，"),t("code",[n._v("bind()")]),n._v("之后返回的函数的参数也接收处理了，也就是说合并处理了。")]),n._v(" "),t("p",[n._v("3、并且"),t("code",[n._v("bind()")]),n._v("后的"),t("code",[n._v("name")]),n._v("为"),t("code",[n._v("bound + 空格 + 调用bind的函数名")]),n._v("。如果是匿名函数则是"),t("code",[n._v("bound + 空格")]),n._v("。")]),n._v(" "),t("p",[n._v("4、"),t("code",[n._v("bind")]),n._v("后的返回值函数，执行后返回值是原函数（"),t("code",[n._v("original")]),n._v("）的返回值。")]),n._v(" "),t("p",[n._v("5、"),t("code",[n._v("bind")]),n._v("函数形参（即函数的"),t("code",[n._v("length")]),n._v("）是"),t("code",[n._v("1")]),n._v("。"),t("code",[n._v("bind")]),n._v("后返回的"),t("code",[n._v("bound")]),n._v("函数形参不定，根据绑定的函数原函数（"),t("code",[n._v("original")]),n._v("）形参个数确定。")]),n._v(" "),t("p",[n._v("根据结论2：我们就可以简单模拟实现一个简版"),t("code",[n._v("bindFn")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("// 第一版 修改this指向，合并参数\nFunction.prototype.bindFn = function bind(thisArg){\n    if(typeof this !== 'function'){\n        throw new TypeError(this + 'must be a function');\n    }\n    // 存储函数本身\n    var self = this;\n    // 去除thisArg的其他参数 转成数组\n    var args = [].slice.call(arguments, 1);\n    var bound = function(){\n        // bind返回的函数 的参数转成数组\n        var boundArgs = [].slice.call(arguments);\n        // apply修改this指向，把两个函数的参数合并传给self函数，并执行self函数，返回执行结果\n        return self.apply(thisArg, args.concat(boundArgs));\n    }\n    return bound;\n}\n// 测试\nvar obj = {\n    name: '若川',\n};\nfunction original(a, b){\n    console.log(this.name);\n    console.log([a, b]);\n}\nvar bound = original.bindFn(obj, 1);\nbound(2); // '若川', [1, 2]\n")])])]),t("p",[n._v("如果面试官看到你答到这里，估计对你的印象60、70分应该是会有的。但我们知道函数是可以用"),t("code",[n._v("new")]),n._v("来实例化的。那么"),t("code",[n._v("bind()")]),n._v("返回值函数会是什么表现呢。\n接下来看"),t("strong",[n._v("例子3")]),n._v("：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var obj = {\n    name: '若川',\n};\nfunction original(a, b){\n    console.log('this', this); // original {}\n    console.log('typeof this', typeof this); // object\n    this.name = b;\n    console.log('name', this.name); // 2\n    console.log('this', this);  // original {name: 2}\n    console.log([a, b]); // 1, 2\n}\nvar bound = original.bind(obj, 1);\nvar newBoundResult = new bound(2);\nconsole.log(newBoundResult, 'newBoundResult'); // original {name: 2}\n")])])]),t("p",[n._v("从"),t("strong",[n._v("例子3")]),n._v("种可以看出"),t("code",[n._v("this")]),n._v("指向了"),t("code",[n._v("new bound()")]),n._v("生成的新对象。")]),n._v(" "),t("h3",{attrs:{id:"可以分析得出结论3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可以分析得出结论3"}},[n._v("#")]),n._v(" 可以分析得出结论3：")]),n._v(" "),t("p",[n._v("1、"),t("code",[n._v("bind")]),n._v("原先指向"),t("code",[n._v("obj")]),n._v("的失效了，其他参数有效。")]),n._v(" "),t("p",[n._v("2、"),t("code",[n._v("new bound")]),n._v("的返回值是以"),t("code",[n._v("original")]),n._v("原函数构造器生成的新对象。"),t("code",[n._v("original")]),n._v("原函数的"),t("code",[n._v("this")]),n._v("指向的就是这个新对象。另外前不久写过一篇文章："),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650747275&idx=1&sn=bb679c3534bad87d5f9650e313fcf43e&chksm=88663207bf11bb11a61ab43b345dafa881d1f5f9aab919b5646764dab6ec597ce44be4b13389&token=769761577&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("面试官问：能否模拟实现JS的new操作符"),t("OutboundLink")],1),n._v("。简单摘要："),t("strong",[n._v("new做了什么：")])]),n._v(" "),t("blockquote",[t("p",[n._v("1.创建了一个全新的对象。\n2.这个对象会被执行"),t("code",[n._v("[[Prototype]]")]),n._v("（也就是"),t("code",[n._v("__proto__")]),n._v("）链接。\n3.生成的新对象会绑定到函数调用的this。\n4.通过"),t("code",[n._v("new")]),n._v("创建的每个对象将最终被"),t("code",[n._v("[[Prototype]]")]),n._v("链接到这个函数的"),t("code",[n._v("prototype")]),n._v("对象上。\n5.如果函数没有返回对象类型"),t("code",[n._v("Object")]),n._v("(包含"),t("code",[n._v("Functoin")]),n._v(", "),t("code",[n._v("Array")]),n._v(", "),t("code",[n._v("Date")]),n._v(", "),t("code",[n._v("RegExg")]),n._v(", "),t("code",[n._v("Error")]),n._v(")，那么"),t("code",[n._v("new")]),n._v("表达式中的函数调用会自动返回这个新的对象。")])]),n._v(" "),t("p",[n._v("所以相当于"),t("code",[n._v("new")]),n._v("调用时，"),t("code",[n._v("bind")]),n._v("的返回值函数"),t("code",[n._v("bound")]),n._v("内部要模拟实现"),t("code",[n._v("new")]),n._v("实现的操作。话不多说，直接上代码。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("// 第三版 实现new调用\nFunction.prototype.bindFn = function bind(thisArg){\n    if(typeof this !== 'function'){\n        throw new TypeError(this + ' must be a function');\n    }\n    // 存储调用bind的函数本身\n    var self = this;\n    // 去除thisArg的其他参数 转成数组\n    var args = [].slice.call(arguments, 1);\n    var bound = function(){\n        // bind返回的函数 的参数转成数组\n        var boundArgs = [].slice.call(arguments);\n        var finalArgs = args.concat(boundArgs);\n        // new 调用时，其实this instanceof bound判断也不是很准确。es6 new.target就是解决这一问题的。\n        if(this instanceof bound){\n            // 这里是实现上文描述的 new 的第 1, 2, 4 步\n            // 1.创建一个全新的对象\n            // 2.并且执行[[Prototype]]链接\n            // 4.通过`new`创建的每个对象将最终被`[[Prototype]]`链接到这个函数的`prototype`对象上。\n            // self可能是ES6的箭头函数，没有prototype，所以就没必要再指向做prototype操作。\n            if(self.prototype){\n                // ES5 提供的方案 Object.create()\n                // bound.prototype = Object.create(self.prototype);\n                // 但 既然是模拟ES5的bind，那浏览器也基本没有实现Object.create()\n                // 所以采用 MDN ployfill方案 https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n                function Empty(){}\n                Empty.prototype = self.prototype;\n                bound.prototype = new Empty();\n            }\n            // 这里是实现上文描述的 new 的第 3 步\n            // 3.生成的新对象会绑定到函数调用的`this`。\n            var result = self.apply(this, finalArgs);\n            // 这里是实现上文描述的 new 的第 5 步\n            // 5.如果函数没有返回对象类型`Object`(包含`Functoin`, `Array`, `Date`, `RegExg`, `Error`)，\n            // 那么`new`表达式中的函数调用会自动返回这个新的对象。\n            var isObject = typeof result === 'object' && result !== null;\n            var isFunction = typeof result === 'function';\n            if(isObject || isFunction){\n                return result;\n            }\n            return this;\n        }\n        else{\n            // apply修改this指向，把两个函数的参数合并传给self函数，并执行self函数，返回执行结果\n            return self.apply(thisArg, finalArgs);\n        }\n    };\n    return bound;\n}\n")])])]),t("p",[n._v("面试官看到这样的实现代码，基本就是满分了，心里独白：这小伙子/小姑娘不错啊。不过可能还会问"),t("code",[n._v("this instanceof bound")]),n._v("不准确问题。上文注释中提到"),t("code",[n._v("this instanceof bound")]),n._v("也不是很准确，"),t("code",[n._v("ES6 new.target")]),n._v("很好的解决这一问题，我们举个"),t("strong",[n._v("例子4")]),n._v(":")]),n._v(" "),t("h3",{attrs:{id:"instanceof-不准确-es6-new-target很好的解决这一问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-不准确-es6-new-target很好的解决这一问题"}},[n._v("#")]),n._v(" "),t("code",[n._v("instanceof")]),n._v(" 不准确，"),t("code",[n._v("ES6 new.target")]),n._v("很好的解决这一问题")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("function Student(name){\n    if(this instanceof Student){\n        this.name = name;\n        console.log('name', name);\n    }\n    else{\n        throw new Error('必须通过new关键字来调用Student。');\n    }\n}\nvar student = new Student('若');\nvar notAStudent = Student.call(student, '川'); // 不抛出错误，且执行了。\nconsole.log(student, 'student', notAStudent, 'notAStudent');\n\nfunction Student2(name){\n    if(typeof new.target !== 'undefined'){\n        this.name = name;\n        console.log('name', name);\n    }\n    else{\n        throw new Error('必须通过new关键字来调用Student2。');\n    }\n}\nvar student2 = new Student2('若');\nvar notAStudent2 = Student2.call(student2, '川');\nconsole.log(student2, 'student2', notAStudent2, 'notAStudent2'); // 抛出错误\n")])])]),t("p",[n._v("细心的同学可能会发现了这版本的代码没有实现"),t("code",[n._v("bind")]),n._v("后的"),t("code",[n._v("bound")]),n._v("函数的"),t("code",[n._v("name")]),n._v("MDN Function.name和"),t("code",[n._v("length")]),n._v("MDN Function.length。面试官可能也发现了这一点继续追问，如何实现，或者问是否看过"),t("code",[n._v("es5-shim")]),n._v("的源码实现"),t("code",[n._v("L201-L335")]),n._v("。如果不限"),t("code",[n._v("ES")]),n._v("版本。其实可以用"),t("code",[n._v("ES5")]),n._v("的"),t("code",[n._v("Object.defineProperties")]),n._v("来实现。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("Object.defineProperties(bound, {\n    'length': {\n        value: self.length,\n    },\n    'name': {\n        value: 'bound ' + self.name,\n    }\n});\n")])])]),t("h3",{attrs:{id:"es5-shim的源码实现bind"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es5-shim的源码实现bind"}},[n._v("#")]),n._v(" "),t("code",[n._v("es5-shim")]),n._v("的源码实现"),t("code",[n._v("bind")])]),n._v(" "),t("p",[n._v("直接附上源码（有删减注释和部分修改等）")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("var $Array = Array;\nvar ArrayPrototype = $Array.prototype;\nvar $Object = Object;\nvar array_push = ArrayPrototype.push;\nvar array_slice = ArrayPrototype.slice;\nvar array_join = ArrayPrototype.join;\nvar array_concat = ArrayPrototype.concat;\nvar $Function = Function;\nvar FunctionPrototype = $Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar max = Math.max;\n// 简版 源码更复杂些。\nvar isCallable = function isCallable(value){\n    if(typeof value !== 'function'){\n        return false;\n    }\n    return true;\n};\nvar Empty = function Empty() {};\n// 源码是 defineProperties\n// 源码是bind笔者改成bindFn便于测试\nFunctionPrototype.bindFn = function bind(that) {\n    var target = this;\n    if (!isCallable(target)) {\n        throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n    }\n    var args = array_slice.call(arguments, 1);\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = apply.call(\n                target,\n                this,\n                array_concat.call(args, array_slice.call(arguments))\n            );\n            if ($Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return apply.call(\n                target,\n                that,\n                array_concat.call(args, array_slice.call(arguments))\n            );\n        }\n    };\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        array_push.call(boundArgs, '$' + i);\n    }\n    // 这里是Function构造方式生成形参length $1, $2, $3...\n    bound = $Function('binder', 'return function (' + array_join.call(boundArgs, ',') + '){ return binder.apply(this, arguments); }')(binder);\n\n    if (target.prototype) {\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n    return bound;\n};\n")])])]),t("p",[n._v("你说出"),t("code",[n._v("es5-shim")]),n._v("源码"),t("code",[n._v("bind")]),n._v("实现，感慨这代码真是高效、严谨。面试官心里独白可能是：你就是我要找的人，薪酬福利你可以和"),t("code",[n._v("HR")]),n._v("去谈下。")]),n._v(" "),t("h2",{attrs:{id:"最后总结一下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最后总结一下"}},[n._v("#")]),n._v(" 最后总结一下")]),n._v(" "),t("p",[n._v("1、"),t("code",[n._v("bind")]),n._v("是"),t("code",[n._v("Function")]),n._v("原型链中的"),t("code",[n._v("Function.prototype")]),n._v("的一个属性，它是一个函数，修改"),t("code",[n._v("this")]),n._v("指向，合并参数传递给原函数，返回值是一个新的函数。\n2、"),t("code",[n._v("bind")]),n._v("返回的函数可以通过"),t("code",[n._v("new")]),n._v("调用，这时提供的"),t("code",[n._v("this")]),n._v("的参数被忽略，指向了"),t("code",[n._v("new")]),n._v("生成的全新对象。内部模拟实现了"),t("code",[n._v("new")]),n._v("操作符。\n3、"),t("code",[n._v("es5-shim")]),n._v("源码模拟实现"),t("code",[n._v("bind")]),n._v("时用"),t("code",[n._v("Function")]),n._v("实现了"),t("code",[n._v("length")]),n._v("。\n事实上，平时其实很少需要使用自己实现的投入到生成环境中。但面试官通过这个面试题能考察很多知识。比如"),t("code",[n._v("this")]),n._v("指向，原型链，闭包，函数等知识，可以扩展很多。\n读者发现有不妥或可改善之处，欢迎指出。另外觉得写得不错，可以点个赞，也是对笔者的一种支持。")]),n._v(" "),t("p",[n._v("文章中的例子和测试代码放在"),t("code",[n._v("github")]),n._v("中bind模拟实现 github。bind模拟实现 预览地址 "),t("code",[n._v("F12")]),n._v("看控制台输出，结合"),t("code",[n._v("source")]),n._v("面板查看效果更佳。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("// 最终版 删除注释 详细注释版请看上文\nFunction.prototype.bind = Function.prototype.bind || function bind(thisArg){\n    if(typeof this !== 'function'){\n        throw new TypeError(this + ' must be a function');\n    }\n    var self = this;\n    var args = [].slice.call(arguments, 1);\n    var bound = function(){\n        var boundArgs = [].slice.call(arguments);\n        var finalArgs = args.concat(boundArgs);\n        if(this instanceof bound){\n            if(self.prototype){\n                function Empty(){}\n                Empty.prototype = self.prototype;\n                bound.prototype = new Empty();\n            }\n            var result = self.apply(this, finalArgs);\n            var isObject = typeof result === 'object' && result !== null;\n            var isFunction = typeof result === 'function';\n            if(isObject || isFunction){\n                return result;\n            }\n            return this;\n        }\n        else{\n            return self.apply(thisArg, finalArgs);\n        }\n    };\n    return bound;\n}\n")])])]),t("h2",{attrs:{id:"推荐阅读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推荐阅读"}},[n._v("#")]),n._v(" 推荐阅读")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650745461&idx=1&sn=eee04a825483aa9187b4e5f52b20b2fe&chksm=886629f9bf11a0ef421eed7d42fe76a0b2431746116a60e76cb919d985fd78e847fb7669832e&token=678682054&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("我在阿里招前端，我该怎么帮你？（现在还可以加模拟面试群）"),t("OutboundLink")],1),n._v(" "),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650745366&idx=1&sn=247eab2756abbf2dfecb43398c64c71a&chksm=8866299abf11a08ca4a2836ef3dd4cc46ba58b4da9adbb036545e7b291696a2cf7dc72a46e62&token=1789278776&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("如何拿下阿里巴巴 P6 的前端 Offer"),t("OutboundLink")],1),n._v(" "),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650745128&idx=1&sn=ac84f8a38008e45e368c17a99a9338c2&chksm=88662aa4bf11a3b202c62ae0bfd131c40bd1afb0937b129ff8d8c0e028691a1b3b63b483803c&token=605825829&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("如何准备阿里P6/P7前端面试--项目经历准备篇"),t("OutboundLink")],1),n._v(" "),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744843&idx=1&sn=3f9d80765a4c543f90a8d804beb74b80&chksm=88662b87bf11a291e49cefafd70335a9fbbc284a11e95542a328d44d5da51b370b2838252216&token=605825829&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("大厂面试官常问的亮点，该如何做出？"),t("OutboundLink")],1),n._v(" "),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650745439&idx=1&sn=21297c7333f3e8417472dc5358032a50&chksm=886629d3bf11a0c572a6c876c38c0f3c44dc3d93eb5d6f066129008e2d236f5401f13a78ccf9&token=678682054&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("如何从初级到专家(P4-P7)打破成长瓶颈和有效突破"),t("OutboundLink")],1),n._v("\n**"),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744727&idx=1&sn=c0709ea50ef9a91ae157cac7d3638cc0&chksm=8866241bbf11ad0d5f5f1bf1c5c93a46a2092b9fdc9eb399c31d001e03b13748fb1a22335afe&token=192125900&lang=zh_CN&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("若川知乎问答：2年前端经验，做的项目没什么技术含量，怎么办？"),t("OutboundLink")],1),n._v("\n**"),t("strong",[t("a",{attrs:{href:"http://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650746362&idx=1&sn=afe3a26cdbde1d423aae4fa99355f369&chksm=88662e76bf11a760a7f0a8565b9e8d52f5e4f056dc2682f213eec6475127d71f6f1d203d6c3a&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("若川知乎高赞：有哪些必看的 JS库？"),t("OutboundLink")],1)])]),n._v(" "),t("h2",{attrs:{id:"末尾"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#末尾"}},[n._v("#")]),n._v(" 末尾")]),n._v(" "),t("p",[t("strong",[n._v("你好，我是")]),t("a",{attrs:{href:"http://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650746939&idx=2&sn=8744a672d3e176b4c6a846fd623d533f&chksm=886633b7bf11baa11df53a388ae583e6f0db3f59c8fb5638426d4758279ffbdc12fe96b38958&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n._v("若川，江湖人称菜如若川，历时一年只写了一个学习源码整体架构系列"),t("OutboundLink")],1),t("strong",[n._v("~(点击蓝字了解我)")])]),n._v(" "),t("ol",[t("li",[n._v("关注"),t("code",[n._v("若川视野")]),n._v('，回复"pdf" 领取优质前端书籍pdf，回复"1"，可加群长期交流学习')]),n._v(" "),t("li",[n._v("我的博客地址：https://lxchuan12.gitee.io 欢迎收藏")]),n._v(" "),t("li",[n._v("觉得文章不错，可以点个"),t("code",[n._v("在看")]),n._v("呀^_^另外欢迎"),t("code",[n._v("留言")]),n._v("交流～")])])])}),[],!1,null,null,null);e.default=a.exports}}]);