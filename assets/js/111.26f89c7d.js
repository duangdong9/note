(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{524:function(v,_,e){"use strict";e.r(_);var t=e(18),a=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"走进-chrome-内心-了解-v8-引擎是如何工作的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#走进-chrome-内心-了解-v8-引擎是如何工作的"}},[v._v("#")]),v._v(" 走进 Chrome 内心，了解 V8 引擎是如何工作的")]),v._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/33pGm2qipnIyZ2V35AN8Ag",target:"_blank",rel:"noopener noreferrer"}},[v._v("https://mp.weixin.qq.com/s/33pGm2qipnIyZ2V35AN8Ag"),e("OutboundLink")],1)])]),v._v(" "),e("h3",{attrs:{id:"v8是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v8是什么"}},[v._v("#")]),v._v(" V8是什么")]),v._v(" "),e("p",[v._v("在深入了解一件事物之前，首先要知道它是什么。")]),v._v(" "),e("p",[e("code",[v._v("V8")]),v._v("是一个由"),e("code",[v._v("Google")]),v._v("开源的采用"),e("code",[v._v("C++")]),v._v("编写的高性能"),e("code",[v._v("JavaScript")]),v._v("和"),e("code",[v._v("WebAssembly")]),v._v("引擎，应用在 "),e("code",[v._v("Chrome")]),v._v("和"),e("code",[v._v("Node.js")]),v._v("等中。它实现了"),e("code",[v._v("ECMAScript")]),v._v("和"),e("code",[v._v("WebAssembly")]),v._v("，运行在"),e("code",[v._v("Windows 7")]),v._v("及以上、"),e("code",[v._v("macOS 10.12+")]),v._v("以及使用"),e("code",[v._v("x64、IA-32、ARM")]),v._v("或"),e("code",[v._v("MIPS")]),v._v("处理器的"),e("code",[v._v("Linux")]),v._v("系统上。"),e("code",[v._v("V8")]),v._v("可以独立运行，也可以嵌入到任何"),e("code",[v._v("C++")]),v._v("应用程序中。")]),v._v(" "),e("h3",{attrs:{id:"v8由来"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v8由来"}},[v._v("#")]),v._v(" V8由来")]),v._v(" "),e("p",[v._v("接下来我们来关心关心它如何诞生的，以及为什么叫这个名字。")]),v._v(" "),e("p",[v._v("V8最初是由"),e("code",[v._v("Lars Bak")]),v._v("团队开发的，以汽车的"),e("code",[v._v("V8")]),v._v("发动机（有八个气缸的V型发动机）进行命名，预示着这将是一款性能极高的"),e("code",[v._v("JavaScript")]),v._v("引擎，在"),e("code",[v._v("2008年9月2号")]),v._v("同"),e("code",[v._v("chrome")]),v._v("一同开源发布。")]),v._v(" "),e("h3",{attrs:{id:"为什么需要v8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要v8"}},[v._v("#")]),v._v(" 为什么需要V8")]),v._v(" "),e("p",[v._v("我们写的"),e("code",[v._v("JavaScript")]),v._v("代码最终是要在机器中被执行的，但机器无法直接识别这些高级语言。需要经过一系列的处理，将高级语言转换成机器可以识别的的指令，也就是二进制码，交给机器执行。这中间的转换过程就是"),e("code",[v._v("V8")]),v._v("的具体工作。")]),v._v(" "),e("p",[v._v("接下来我们就来详细的了解一下。")]),v._v(" "),e("h3",{attrs:{id:"v8组成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v8组成"}},[v._v("#")]),v._v(" V8组成")]),v._v(" "),e("p",[v._v("首先来看一下"),e("code",[v._v("V8")]),v._v("的内部组成。"),e("code",[v._v("V8")]),v._v("的内部有很多模块，其中最重要的4个如下：")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("Parser")]),v._v(": 解析器，负责将源代码解析成"),e("code",[v._v("AST")])]),v._v(" "),e("li",[e("strong",[v._v("Ignition")]),v._v(": 解释器，负责将"),e("code",[v._v("AST")]),v._v("转换成字节码并执行，同时会标记热点代码")]),v._v(" "),e("li",[e("strong",[v._v("TurboFan")]),v._v(": 编译器，负责将热点代码编译成机器码并执行")]),v._v(" "),e("li",[e("strong",[v._v("Orinoco")]),v._v(": 垃圾回收器，负责进行内存空间回收")])]),v._v(" "),e("h3",{attrs:{id:"v8工作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v8工作流程"}},[v._v("#")]),v._v(" V8工作流程")]),v._v(" "),e("p",[v._v("以下是"),e("code",[v._v("V8")]),v._v("中几个重要模块的具体工作流程图。我们逐个分析。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/pfCCZhlbMQS4V4wS8G66oIxp4ibnqPSaV5LJAQlaaTFOAdxoAfk8qadmHB7lucZP8ZRVSOGx8oOMNSyEfA0nx3w/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),v._v("V8工作流程.png")]),v._v(" "),e("h4",{attrs:{id:"parser解析器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parser解析器"}},[v._v("#")]),v._v(" Parser解析器")]),v._v(" "),e("p",[v._v("Parser解析器负责将源代码转换成抽象语法树"),e("code",[v._v("AST")]),v._v("。在转换过程中有两个重要的阶段："),e("code",[v._v("词法分析（Lexical Analysis）")]),v._v("和"),e("code",[v._v("语法分析（Syntax Analysis）")]),v._v("。")]),v._v(" "),e("h5",{attrs:{id:"词法分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#词法分析"}},[v._v("#")]),v._v(" 词法分析")]),v._v(" "),e("p",[v._v("也称为分词，是将字符串形式的代码转换为标记（token）序列的过程。这里的"),e("code",[v._v("token")]),v._v("是一个字符串，是构成源代码的最小单位，类似于英语中单词。词法分析也可以理解成将英文字母组合成单词的过程。词法分析过程中不会关心单词之间的关系。比如：词法分析过程中能够将括号标记成"),e("code",[v._v("token")]),v._v("，但并不会校验括号是否匹配。")]),v._v(" "),e("p",[e("code",[v._v("JavaScript")]),v._v("中的"),e("code",[v._v("token")]),v._v("主要包含以下几种：")]),v._v(" "),e("blockquote",[e("p",[v._v("关键字：var、let、const等")]),v._v(" "),e("p",[v._v("标识符：没有被引号括起来的连续字符，可能是一个变量，也可能是 if、else 这些关键字，又或者是 true、false 这些内置常量")]),v._v(" "),e("p",[v._v("运算符：+、-、 *、/ 等")]),v._v(" "),e("p",[v._v("数字：像十六进制，十进制，八进制以及科学表达式等")]),v._v(" "),e("p",[v._v("字符串：变量的值等")]),v._v(" "),e("p",[v._v("空格：连续的空格，换行，缩进等")]),v._v(" "),e("p",[v._v("注释：行注释或块注释都是一个不可拆分的最小语法单元")]),v._v(" "),e("p",[v._v("标点：大括号、小括号、分号、冒号等")])]),v._v(" "),e("p",[v._v("以下是"),e("code",[v._v("const a = 'hello world'")]),v._v("经过"),e("code",[v._v("esprima")]),v._v("词法分析后生成的"),e("code",[v._v("tokens")]),v._v("。")]),v._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v('[\n    {\n        "type": "Keyword",\n        "value": "const"\n    },\n    {\n        "type": "Identifier",\n        "value": "a"\n    },\n    {\n        "type": "Punctuator",\n        "value": "="\n    },\n    {\n        "type": "String",\n        "value": "\'hello world\'"\n    }\n]\n')])])]),e("h5",{attrs:{id:"语法分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法分析"}},[v._v("#")]),v._v(" 语法分析")]),v._v(" "),e("p",[v._v("语法分心是将词法分析产生的"),e("code",[v._v("token")]),v._v("按照某种给定的形式文法转换成"),e("code",[v._v("AST")]),v._v("的过程。也就是把单词组合成句子的过程。在转换过程中会验证语法，语法如果有错的话，会抛出语法错误。")]),v._v(" "),e("p",[v._v("上述"),e("code",[v._v("const a = 'hello world'")]),v._v("经过语法分析后生成的"),e("code",[v._v("AST")]),v._v("如下：")]),v._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v('{\n  "type": "Program",\n  "body": [\n    {\n      "type": "VariableDeclaration",\n      "declarations": [\n        {\n          "type": "VariableDeclarator",\n          "id": {\n            "type": "Identifier",\n            "name": "a"\n          },\n          "init": {\n            "type": "Literal",\n            "value": "hello world",\n            "raw": "\'hello world\'"\n          }\n        }\n      ],\n      "kind": "const"\n    }\n  ],\n  "sourceType": "script"\n}\n')])])]),e("p",[v._v("经过"),e("code",[v._v("Parser")]),v._v("解析器生成的"),e("code",[v._v("AST")]),v._v("将交由"),e("code",[v._v("Ignition")]),v._v("解释器进行处理。")]),v._v(" "),e("h4",{attrs:{id:"ignition解释器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignition解释器"}},[v._v("#")]),v._v(" Ignition解释器")]),v._v(" "),e("p",[v._v("Ignition解释器负责将"),e("code",[v._v("AST")]),v._v("转换成字节码（Bytecode）并执行。字节码是介于"),e("code",[v._v("AST")]),v._v("和机器码之间的一种代码，与特定类型的机器代码无关，需要通过解释器转换成机器码才可以执行。")]),v._v(" "),e("p",[v._v("看到这里想必大家都有疑惑，既然字节码也需要转换成机器码才能运行，那一开始为什么不直接将"),e("code",[v._v("AST")]),v._v("转换成机器码直接运行呢？转换成机器码直接运行速度肯定更快，那为什么还要加一个中间过程呢？")]),v._v(" "),e("p",[v._v("其实在"),e("code",[v._v("V8")]),v._v("的"),e("code",[v._v("5.9")]),v._v("版本之前是没有字节码的，而是直接将JS代码编译成机器码并将机器码存储到内存中，这样就占用了大量的内存，而早期的手机内存都不高，过度的占用会导致手机性能大大的下降；而且直接编译成机器码导致编译时间长，启动速度慢；再者直接将JS代码转换成机器码需要针对不同的"),e("code",[v._v("CPU")]),v._v("架构编写不同的指令集，复杂度很高。")]),v._v(" "),e("p",[e("code",[v._v("5.9")]),v._v("版本以后引入了字节码，可以解决上述内存占用大、启动时间长、代码复杂度高这几个问题。")]),v._v(" "),e("p",[v._v("接下来我们来看看"),e("code",[v._v("Ignition")]),v._v("是如何将"),e("code",[v._v("AST")]),v._v("转换成字节码的。")]),v._v(" "),e("p",[v._v("下图是"),e("code",[v._v("Ignition")]),v._v("解释器的工作流程图。"),e("code",[v._v("AST")]),v._v("需要先通过字节码生成器，再经过一系列的优化之后才能生成字节码。")]),v._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/pfCCZhlbMQS4V4wS8G66oIxp4ibnqPSaVOUCuRD9QC0ZanoKjeibl4h92ZLVeKELjBZQHvTYtgIuxf6ntU4c8dYQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}}),v._v("ignation.png")]),v._v(" "),e("p",[v._v("其中的优化包括：")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("Register Optimizer")]),v._v("：主要是避免寄存器不必要的加载和存储")]),v._v(" "),e("li",[e("strong",[v._v("Peephole Optimizer")]),v._v("：寻找字节码中可以复用的部分，并进行合并")]),v._v(" "),e("li",[e("strong",[v._v("Dead-code Elimination")]),v._v("：删除无用的代码，减少字节码的大小")])]),v._v(" "),e("p",[v._v("将代码转换成字节码后就可以通过解释器执行了。"),e("code",[v._v("Ignition")]),v._v("在执行的过程中，会监视代码的执行情况并记录执行信息，如函数的执行次数、每次执行函数时所传的参数等。")]),v._v(" "),e("p",[v._v("当同一段代码被执行多次，就会被标记成热点代码。热点代码会交给"),e("code",[v._v("TurboFan")]),v._v("编译器进行处理。")]),v._v(" "),e("h3",{attrs:{id:"turbofan编译器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#turbofan编译器"}},[v._v("#")]),v._v(" TurboFan编译器")]),v._v(" "),e("p",[e("code",[v._v("TurboFan")]),v._v("拿到"),e("code",[v._v("Ignition")]),v._v("标记的热点代码后，会先进行优化处理，然后将优化后字节码编译成更高效的机器码存储起来。下次再次执行相同代码时，会直接执行相应的机器码，这样就在很大程度上提升了代码的执行效率。")]),v._v(" "),e("p",[v._v("当一段代码不再是热点代码后，"),e("code",[v._v("TurboFan")]),v._v("会进行去优化的过程，将优化编译后的机器码还原成字节码，将代码的执行权利交还给"),e("code",[v._v("Ignition")]),v._v("。")]),v._v(" "),e("p",[v._v("现在我们来看一看具体的执行过程。")]),v._v(" "),e("p",[v._v("以"),e("code",[v._v("sum += arr[i]")]),v._v("为例，由于"),e("code",[v._v("JS")]),v._v("是动态类型的语言，每次的"),e("code",[v._v("sum")]),v._v("和"),e("code",[v._v("arr[i]")]),v._v("都有可能是不同的类型，在执行这段代码时，"),e("code",[v._v("Ignition")]),v._v("每次都会检查"),e("code",[v._v("sum")]),v._v("和"),e("code",[v._v("arr[i]")]),v._v("的数据类型。当发现同样的代码被执行了多次时，就将其标记为热点代码，交给"),e("code",[v._v("TurboFan")]),v._v("。")]),v._v(" "),e("p",[e("code",[v._v("TurboFan")]),v._v("在执行时，如果每次都判断"),e("code",[v._v("sum")]),v._v("和"),e("code",[v._v("arr[i]")]),v._v("的数据类型是很浪费时间的。因此在优化时，会根据之前的几次执行确定"),e("code",[v._v("sum")]),v._v("和"),e("code",[v._v("arr[i]")]),v._v("的数据类型，将其编译成机器码。下次再执行时，省去了判断数据类型的过程。")]),v._v(" "),e("p",[v._v("但如果在后续的执行过程中，"),e("code",[v._v("arr[i]")]),v._v("的数据类型发生了改变，之前生成的机器码就不满足要求了，"),e("code",[v._v("TurboFan")]),v._v("会把之前生成的机器码丢弃，将执行权利再交给"),e("code",[v._v("Ignition")]),v._v("，完成去优化的过程。")]),v._v(" "),e("p",[v._v("热点代码：\n"),e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/pfCCZhlbMQS4V4wS8G66oIxp4ibnqPSaVyvEyDb2NotXPnibaNJGiaV9EnvkpUaMhiaW1ibKFbSMiap9hiabKLOQGd7Og/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),v._v(" "),e("p",[v._v("优化前：\n"),e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/pfCCZhlbMQS4V4wS8G66oIxp4ibnqPSaVz21oBtLGutYSibJu24JSx1sUticJTj7jOiacIY4UIfmXyfqpFqCsBJTzg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),v._v(" "),e("p",[v._v("优化后：\n"),e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/pfCCZhlbMQS4V4wS8G66oIxp4ibnqPSaVWuISHLemaQtfBjSLTRia9bIvp8gYIZMRtH9UTOiaiarn5SNC85SZf3mJw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),v._v(" "),e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),e("p",[v._v("现在我们来总结一下"),e("code",[v._v("V8")]),v._v("的执行过程：")]),v._v(" "),e("ol",[e("li",[v._v("源代码经过"),e("code",[v._v("Parser")]),v._v("解析器，经过词法分析和语法分析生成"),e("code",[v._v("AST")])]),v._v(" "),e("li",[e("code",[v._v("AST")]),v._v("经过"),e("code",[v._v("Ignition")]),v._v("解释器生成字节码并执行")]),v._v(" "),e("li",[v._v("在执行过程中，如果发现热点代码，将热点代码交给"),e("code",[v._v("TurboFan")]),v._v("编译器生成机器码并执行")]),v._v(" "),e("li",[v._v("如果热点代码不再满足要求，进行去优化处理")])]),v._v(" "),e("p",[v._v("这种字节码与解释器和编译器结合的技术，就是我们通常所说的即时编译("),e("code",[v._v("JIT")]),v._v(")。")]),v._v(" "),e("p",[v._v("本文并没有介绍垃圾回收器"),e("code",[v._v("Orinoco")]),v._v("，"),e("code",[v._v("V8")]),v._v("的垃圾回收机制可以单独用一篇文章来详细介绍，我们下期再见。")]),v._v(" "),e("p",[v._v("关于本文")]),v._v(" "),e("h5",{attrs:{id:"来源-阳呀呀"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#来源-阳呀呀"}},[v._v("#")]),v._v(" 来源：阳呀呀")]),v._v(" "),e("p",[v._v("https://segmentfault.com/a/1190000040331440")])])}),[],!1,null,null,null);_.default=a.exports}}]);