(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{513:function(e,n,s){"use strict";s.r(n);var a=s(18),v=Object(a.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"babel-nodemon"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel-nodemon"}},[e._v("#")]),e._v(" babel nodemon")]),e._v(" "),s("p",[e._v("使用 babel-node 可以在 node 端"),s("strong",[e._v("自行编译并运行 es6 甚至 es7")]),e._v("。安装方法如下：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm i @babel/core @babel/cli @babel/preset-env @babel/node -D // 或者使用 yarn\n")])])]),s("p",[e._v("注意：我这里是局部安装的，全局安装的方法请自行看官方文档。")]),e._v(" "),s("p",[e._v("然后我们需要在项目的根目录下面创建 .babelrc 文件：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// .babelrc\n{\n  "presets": ["@babel/preset-env"]\n}\n')])])]),s("p",[e._v("最后修改 package.json，使用 babel-node 启动服务器入口文件即可：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// 使用命令 npm run server 即可运行\n"scripts": {\n  "server": "babel-node server.js"\n},\n')])])]),s("p",[e._v("这里有 2 点需要说明一下：")]),e._v(" "),s("ol",[s("li",[e._v("为什么要用 babel-node 而不用 @babel/register 或者 @babel/polyfill 库？因为后者"),s("strong",[e._v("只能用于打包过程")]),e._v("。也就是说，需要先编译，然后才能运行。")]),e._v(" "),s("li",[e._v("babel-node 只是用于"),s("strong",[e._v("非打包过程")]),e._v("的，如果需要打包的话（比如用于"),s("strong",[e._v("生产环境")]),e._v("），则不建议使用 babel-node，因为 babel-node 的打包体积会非常大。")])]),e._v(" "),s("h3",{attrs:{id:"nodemon"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodemon"}},[e._v("#")]),e._v(" nodemon")]),e._v(" "),s("p",[e._v("使用 nodemon 可以"),s("strong",[e._v("监听文件修改，然后让服务器自行重启")]),e._v("。")]),e._v(" "),s("p",[e._v("首先我们安装 nodemon：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("npm i nodemon -D // 或者使用 yarn\n")])])]),s("p",[e._v("最后修改一下 package.json 的命令即可：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('// 使用命令 npm run server 即可运行\n"scripts": {\n  "server": "nodemon --exec babel-node server.js"\n},\n')])])]),s("p",[e._v("说明一下为什么要加 "),s("strong",[e._v("--exec 这个参数")]),e._v("：这个参数是让 nodemon 运行非 node 程序的")]),e._v(" "),s("ul",[s("li",[e._v("添加"),s("code",[e._v("start")]),e._v("命令 ："),s("code",[e._v("nodemon --exec babel-node src/server.js")]),e._v("。这个命令是告诉"),s("code",[e._v("nodemon")]),e._v("去监听文件的变化，一旦检测到有文件发生了变化，就会重启并用babel-node去运行"),s("code",[e._v("src/server.js")]),e._v("文件。这个命令一般用于本地开发。")]),e._v(" "),s("li",[e._v("添加"),s("code",[e._v("build")]),e._v("命令："),s("code",[e._v("babel src --out-dir dist")]),e._v("。这个命令是告诉babel去编译"),s("code",[e._v("src")]),e._v("里的源文件，并将得到的结果输出到"),s("code",[e._v("dist")]),e._v("中")]),e._v(" "),s("li",[e._v("添加"),s("code",[e._v("serve")]),e._v("命令："),s("code",[e._v("node dist/server.js")]),e._v("。这个命令是让我们用node运行我们编译好的文件。可能有人会问，为什么我们不直接用nodemon去运行我们的程序呢？这是因为相较于node,使用nodemon运行我们的程序会使用更多的内存，花费更多的启动时间。")])])])}),[],!1,null,null,null);n.default=v.exports}}]);